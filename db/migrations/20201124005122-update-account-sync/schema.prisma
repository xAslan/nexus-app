// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int       @default(autoincrement()) @id
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  name           String?
  email          String    @unique
  hashedPassword String?
  role           String    @default("user")
  sessions       Session[]
}

model Session {
  id                 Int       @default(autoincrement()) @id
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  user               User?     @relation(fields: [userId], references: [id])
  userId             Int?
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?
}

model Institution {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique // display name
  authType  String   @default("none")
  shortName String   // shortcode for institution make into enum and save in DB
  type      String   @default("unknown") // traditional, brokerage, bank, crypto_exchange, etc. make this into an ENUM and save in DB
}

model Account {
  id          Int          @default(autoincrement()) @id
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  name        String       // display name for account
  apiKey      String?      
  apiSecret   String?      
  institution Institution? 
  type        String       //manual, blockchain_wallet, institution, defi ENUM
  wallets     Wallet[]     
  holdings    Holding[]    
  user        User         @relation(fields: [userId], references: [id])
  userId      Int          
  lastSync    DateTime?
  lastSyncEnd DateTime?
  syncStatus  String       @default("inactive")
}

model Wallet {
  id        Int       @default(autoincrement()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    
  type      String   // 
  symbol    String    
  xpub      String?   
  addresses Address[] 
  account   Account   @relation(fields: [accountId], references: [id])
  accountId Int       
  amount Int 
}

model Address {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String?  
  address   String   
}

model Holding {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   
  symbol    String   
  amount    Int      
  account   Account  @relation(fields: [accountId], references: [id])
  accountId Int      
}
